cabal-version:       >=1.10
-- Initial package description 'Exh2.cabal' generated by 'cabal init'.  For
--  further documentation, see http://haskell.org/cabal/users-guide/

name:                Exh2
version:             0.1.0.0
-- synopsis:
-- description:
-- bug-reports:
-- license:
license-file:        LICENSE
author:              KenyC
maintainer:          keny.chatain@gmail.com
-- copyright:
-- category:
build-type:          Simple

library
  hs-source-dirs:    lib/
  exposed-modules:   Exh.Formula
                     Exh.Exh
  build-depends:       base >=4.13 && <4.14
                     , mtl
                     , containers
                     , data-default
  default-language:  Haskell2010
  ghc-options:   -Wunused-imports
                 -Wincomplete-patterns 
                 -Wmissing-fields 
                 -Wunused-matches
                 -fdefer-typed-holes
  default-extensions:
    BangPatterns
    GADTs
    DataKinds
    StandaloneDeriving
    RecordWildCards
    TemplateHaskell
    TypeApplications
    ScopedTypeVariables
    DeriveFunctor
    ConstraintKinds
    PatternSynonyms
    LambdaCase
    Rank2Types
    MultiWayIf
    TypeFamilies
    FlexibleContexts  
    FlexibleInstances  
    MultiParamTypeClasses  
    UnicodeSyntax
    TypeOperators
    GeneralizedNewtypeDeriving
  


test-suite main-test
  type:               exitcode-stdio-1.0
  main-is:            Main.hs
  other-modules:      Test.Display
                      Test.Evaluate
                      Test.Alts
                      Test.Exh
                      Utils
  -- other-extensions:
  build-depends:      base
                    , Exh2
                    , containers
                    , data-default
                    , mtl  
                    , tasty
                    , tasty-hunit
                    , tasty-quickcheck
  hs-source-dirs:      test
  default-language:    Haskell2010
  default-extensions:
    BangPatterns
    GADTs
    DataKinds
    StandaloneDeriving
    RecordWildCards
    TemplateHaskell
    TypeApplications
    ScopedTypeVariables
    DeriveFunctor
    ConstraintKinds
    PatternSynonyms
    LambdaCase
    Rank2Types
    MultiWayIf
    TypeFamilies
    FlexibleContexts  
    FlexibleInstances  
    MultiParamTypeClasses  
    UnicodeSyntax
    TypeOperators
    GeneralizedNewtypeDeriving
